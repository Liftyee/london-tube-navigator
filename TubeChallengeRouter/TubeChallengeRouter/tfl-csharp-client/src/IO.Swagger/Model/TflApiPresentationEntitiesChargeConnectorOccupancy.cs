/* 
 * Transport for London Unified API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// TflApiPresentationEntitiesChargeConnectorOccupancy
    /// </summary>
    [DataContract]
    public partial class TflApiPresentationEntitiesChargeConnectorOccupancy :  IEquatable<TflApiPresentationEntitiesChargeConnectorOccupancy>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TflApiPresentationEntitiesChargeConnectorOccupancy" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="sourceSystemPlaceId">sourceSystemPlaceId.</param>
        /// <param name="status">status.</param>
        public TflApiPresentationEntitiesChargeConnectorOccupancy(int? id = default(int?), string sourceSystemPlaceId = default(string), string status = default(string))
        {
            this.Id = id;
            this.SourceSystemPlaceId = sourceSystemPlaceId;
            this.Status = status;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; set; }

        /// <summary>
        /// Gets or Sets SourceSystemPlaceId
        /// </summary>
        [DataMember(Name="sourceSystemPlaceId", EmitDefaultValue=false)]
        public string SourceSystemPlaceId { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public string Status { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TflApiPresentationEntitiesChargeConnectorOccupancy {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  SourceSystemPlaceId: ").Append(SourceSystemPlaceId).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TflApiPresentationEntitiesChargeConnectorOccupancy);
        }

        /// <summary>
        /// Returns true if TflApiPresentationEntitiesChargeConnectorOccupancy instances are equal
        /// </summary>
        /// <param name="input">Instance of TflApiPresentationEntitiesChargeConnectorOccupancy to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TflApiPresentationEntitiesChargeConnectorOccupancy input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.SourceSystemPlaceId == input.SourceSystemPlaceId ||
                    (this.SourceSystemPlaceId != null &&
                    this.SourceSystemPlaceId.Equals(input.SourceSystemPlaceId))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.SourceSystemPlaceId != null)
                    hashCode = hashCode * 59 + this.SourceSystemPlaceId.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
