/* 
 * Transport for London Unified API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// TflApiPresentationEntitiesJourneyPlannerPath
    /// </summary>
    [DataContract]
    public partial class TflApiPresentationEntitiesJourneyPlannerPath :  IEquatable<TflApiPresentationEntitiesJourneyPlannerPath>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TflApiPresentationEntitiesJourneyPlannerPath" /> class.
        /// </summary>
        /// <param name="lineString">lineString.</param>
        /// <param name="stopPoints">stopPoints.</param>
        /// <param name="elevation">elevation.</param>
        public TflApiPresentationEntitiesJourneyPlannerPath(string lineString = default(string), List<TflApiPresentationEntitiesIdentifier> stopPoints = default(List<TflApiPresentationEntitiesIdentifier>), List<TflApiCommonJourneyPlannerJpElevation> elevation = default(List<TflApiCommonJourneyPlannerJpElevation>))
        {
            this.LineString = lineString;
            this.StopPoints = stopPoints;
            this.Elevation = elevation;
        }
        
        /// <summary>
        /// Gets or Sets LineString
        /// </summary>
        [DataMember(Name="lineString", EmitDefaultValue=false)]
        public string LineString { get; set; }

        /// <summary>
        /// Gets or Sets StopPoints
        /// </summary>
        [DataMember(Name="stopPoints", EmitDefaultValue=false)]
        public List<TflApiPresentationEntitiesIdentifier> StopPoints { get; set; }

        /// <summary>
        /// Gets or Sets Elevation
        /// </summary>
        [DataMember(Name="elevation", EmitDefaultValue=false)]
        public List<TflApiCommonJourneyPlannerJpElevation> Elevation { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TflApiPresentationEntitiesJourneyPlannerPath {\n");
            sb.Append("  LineString: ").Append(LineString).Append("\n");
            sb.Append("  StopPoints: ").Append(StopPoints).Append("\n");
            sb.Append("  Elevation: ").Append(Elevation).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TflApiPresentationEntitiesJourneyPlannerPath);
        }

        /// <summary>
        /// Returns true if TflApiPresentationEntitiesJourneyPlannerPath instances are equal
        /// </summary>
        /// <param name="input">Instance of TflApiPresentationEntitiesJourneyPlannerPath to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TflApiPresentationEntitiesJourneyPlannerPath input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.LineString == input.LineString ||
                    (this.LineString != null &&
                    this.LineString.Equals(input.LineString))
                ) && 
                (
                    this.StopPoints == input.StopPoints ||
                    this.StopPoints != null &&
                    this.StopPoints.SequenceEqual(input.StopPoints)
                ) && 
                (
                    this.Elevation == input.Elevation ||
                    this.Elevation != null &&
                    this.Elevation.SequenceEqual(input.Elevation)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.LineString != null)
                    hashCode = hashCode * 59 + this.LineString.GetHashCode();
                if (this.StopPoints != null)
                    hashCode = hashCode * 59 + this.StopPoints.GetHashCode();
                if (this.Elevation != null)
                    hashCode = hashCode * 59 + this.Elevation.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
