/* 
 * Transport for London Unified API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// TflApiPresentationEntitiesJourneyPlannerTimeAdjustments
    /// </summary>
    [DataContract]
    public partial class TflApiPresentationEntitiesJourneyPlannerTimeAdjustments :  IEquatable<TflApiPresentationEntitiesJourneyPlannerTimeAdjustments>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TflApiPresentationEntitiesJourneyPlannerTimeAdjustments" /> class.
        /// </summary>
        /// <param name="earliest">earliest.</param>
        /// <param name="earlier">earlier.</param>
        /// <param name="later">later.</param>
        /// <param name="latest">latest.</param>
        public TflApiPresentationEntitiesJourneyPlannerTimeAdjustments(TflApiPresentationEntitiesJourneyPlannerTimeAdjustment earliest = default(TflApiPresentationEntitiesJourneyPlannerTimeAdjustment), TflApiPresentationEntitiesJourneyPlannerTimeAdjustment earlier = default(TflApiPresentationEntitiesJourneyPlannerTimeAdjustment), TflApiPresentationEntitiesJourneyPlannerTimeAdjustment later = default(TflApiPresentationEntitiesJourneyPlannerTimeAdjustment), TflApiPresentationEntitiesJourneyPlannerTimeAdjustment latest = default(TflApiPresentationEntitiesJourneyPlannerTimeAdjustment))
        {
            this.Earliest = earliest;
            this.Earlier = earlier;
            this.Later = later;
            this.Latest = latest;
        }
        
        /// <summary>
        /// Gets or Sets Earliest
        /// </summary>
        [DataMember(Name="earliest", EmitDefaultValue=false)]
        public TflApiPresentationEntitiesJourneyPlannerTimeAdjustment Earliest { get; set; }

        /// <summary>
        /// Gets or Sets Earlier
        /// </summary>
        [DataMember(Name="earlier", EmitDefaultValue=false)]
        public TflApiPresentationEntitiesJourneyPlannerTimeAdjustment Earlier { get; set; }

        /// <summary>
        /// Gets or Sets Later
        /// </summary>
        [DataMember(Name="later", EmitDefaultValue=false)]
        public TflApiPresentationEntitiesJourneyPlannerTimeAdjustment Later { get; set; }

        /// <summary>
        /// Gets or Sets Latest
        /// </summary>
        [DataMember(Name="latest", EmitDefaultValue=false)]
        public TflApiPresentationEntitiesJourneyPlannerTimeAdjustment Latest { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TflApiPresentationEntitiesJourneyPlannerTimeAdjustments {\n");
            sb.Append("  Earliest: ").Append(Earliest).Append("\n");
            sb.Append("  Earlier: ").Append(Earlier).Append("\n");
            sb.Append("  Later: ").Append(Later).Append("\n");
            sb.Append("  Latest: ").Append(Latest).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TflApiPresentationEntitiesJourneyPlannerTimeAdjustments);
        }

        /// <summary>
        /// Returns true if TflApiPresentationEntitiesJourneyPlannerTimeAdjustments instances are equal
        /// </summary>
        /// <param name="input">Instance of TflApiPresentationEntitiesJourneyPlannerTimeAdjustments to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TflApiPresentationEntitiesJourneyPlannerTimeAdjustments input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Earliest == input.Earliest ||
                    (this.Earliest != null &&
                    this.Earliest.Equals(input.Earliest))
                ) && 
                (
                    this.Earlier == input.Earlier ||
                    (this.Earlier != null &&
                    this.Earlier.Equals(input.Earlier))
                ) && 
                (
                    this.Later == input.Later ||
                    (this.Later != null &&
                    this.Later.Equals(input.Later))
                ) && 
                (
                    this.Latest == input.Latest ||
                    (this.Latest != null &&
                    this.Latest.Equals(input.Latest))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Earliest != null)
                    hashCode = hashCode * 59 + this.Earliest.GetHashCode();
                if (this.Earlier != null)
                    hashCode = hashCode * 59 + this.Earlier.GetHashCode();
                if (this.Later != null)
                    hashCode = hashCode * 59 + this.Later.GetHashCode();
                if (this.Latest != null)
                    hashCode = hashCode * 59 + this.Latest.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
