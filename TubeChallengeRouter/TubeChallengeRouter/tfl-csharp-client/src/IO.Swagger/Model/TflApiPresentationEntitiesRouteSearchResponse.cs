/* 
 * Transport for London Unified API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// TflApiPresentationEntitiesRouteSearchResponse
    /// </summary>
    [DataContract]
    public partial class TflApiPresentationEntitiesRouteSearchResponse :  IEquatable<TflApiPresentationEntitiesRouteSearchResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TflApiPresentationEntitiesRouteSearchResponse" /> class.
        /// </summary>
        /// <param name="input">input.</param>
        /// <param name="searchMatches">searchMatches.</param>
        public TflApiPresentationEntitiesRouteSearchResponse(string input = default(string), List<TflApiPresentationEntitiesRouteSearchMatch> searchMatches = default(List<TflApiPresentationEntitiesRouteSearchMatch>))
        {
            this.Input = input;
            this.SearchMatches = searchMatches;
        }
        
        /// <summary>
        /// Gets or Sets Input
        /// </summary>
        [DataMember(Name="input", EmitDefaultValue=false)]
        public string Input { get; set; }

        /// <summary>
        /// Gets or Sets SearchMatches
        /// </summary>
        [DataMember(Name="searchMatches", EmitDefaultValue=false)]
        public List<TflApiPresentationEntitiesRouteSearchMatch> SearchMatches { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TflApiPresentationEntitiesRouteSearchResponse {\n");
            sb.Append("  Input: ").Append(Input).Append("\n");
            sb.Append("  SearchMatches: ").Append(SearchMatches).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TflApiPresentationEntitiesRouteSearchResponse);
        }

        /// <summary>
        /// Returns true if TflApiPresentationEntitiesRouteSearchResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of TflApiPresentationEntitiesRouteSearchResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TflApiPresentationEntitiesRouteSearchResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Input == input.Input ||
                    (this.Input != null &&
                    this.Input.Equals(input.Input))
                ) && 
                (
                    this.SearchMatches == input.SearchMatches ||
                    this.SearchMatches != null &&
                    this.SearchMatches.SequenceEqual(input.SearchMatches)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Input != null)
                    hashCode = hashCode * 59 + this.Input.GetHashCode();
                if (this.SearchMatches != null)
                    hashCode = hashCode * 59 + this.SearchMatches.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
