@startuml
interface ICabwiseApi {
}
class CabwiseApi <<partial>> {
    + CabwiseApi(basePath:String)
    + CabwiseApi(configuration:IO.Swagger.Client.Configuration)
    + GetBasePath() : String
    + SetBasePath(basePath:String) : void
    + DefaultHeader() : IDictionary<String, String>
    + AddDefaultHeader(key:string, value:string) : void
    + CabwiseGet(lat:double?, lon:double?, optype:string, wc:string, radius:double?, name:string, maxResults:int?, legacyFormat:bool?, forceXml:bool?, twentyFourSevenOnly:bool?) : SystemObject
    + CabwiseGetWithHttpInfo(lat:double?, lon:double?, optype:string, wc:string, radius:double?, name:string, maxResults:int?, legacyFormat:bool?, forceXml:bool?, twentyFourSevenOnly:bool?) : ApiResponse< SystemObject >
    + <<async>> CabwiseGetAsync(lat:double?, lon:double?, optype:string, wc:string, radius:double?, name:string, maxResults:int?, legacyFormat:bool?, forceXml:bool?, twentyFourSevenOnly:bool?) : System.Threading.Tasks.Task<SystemObject>
    + <<async>> CabwiseGetAsyncWithHttpInfo(lat:double?, lon:double?, optype:string, wc:string, radius:double?, name:string, maxResults:int?, legacyFormat:bool?, forceXml:bool?, twentyFourSevenOnly:bool?) : System.Threading.Tasks.Task<ApiResponse<SystemObject>>
}
IApiAccessor <|-- ICabwiseApi
ICabwiseApi <|-- CabwiseApi
@enduml
