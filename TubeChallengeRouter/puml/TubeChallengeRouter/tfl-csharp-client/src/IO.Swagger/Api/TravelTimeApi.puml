@startuml
interface ITravelTimeApi {
}
class TravelTimeApi <<partial>> {
    + TravelTimeApi(basePath:String)
    + TravelTimeApi(configuration:IO.Swagger.Client.Configuration)
    + GetBasePath() : String
    + SetBasePath(basePath:String) : void
    + DefaultHeader() : IDictionary<String, String>
    + AddDefaultHeader(key:string, value:string) : void
    + TravelTimeGetCompareOverlay(z:int?, pinLat:double?, pinLon:double?, mapCenterLat:double?, mapCenterLon:double?, scenarioTitle:string, timeOfDayId:string, modeId:string, width:int?, height:int?, direction:string, travelTimeInterval:int?, compareType:string, compareValue:string) : SystemObject
    + TravelTimeGetCompareOverlayWithHttpInfo(z:int?, pinLat:double?, pinLon:double?, mapCenterLat:double?, mapCenterLon:double?, scenarioTitle:string, timeOfDayId:string, modeId:string, width:int?, height:int?, direction:string, travelTimeInterval:int?, compareType:string, compareValue:string) : ApiResponse< SystemObject >
    + <<async>> TravelTimeGetCompareOverlayAsync(z:int?, pinLat:double?, pinLon:double?, mapCenterLat:double?, mapCenterLon:double?, scenarioTitle:string, timeOfDayId:string, modeId:string, width:int?, height:int?, direction:string, travelTimeInterval:int?, compareType:string, compareValue:string) : System.Threading.Tasks.Task<SystemObject>
    + <<async>> TravelTimeGetCompareOverlayAsyncWithHttpInfo(z:int?, pinLat:double?, pinLon:double?, mapCenterLat:double?, mapCenterLon:double?, scenarioTitle:string, timeOfDayId:string, modeId:string, width:int?, height:int?, direction:string, travelTimeInterval:int?, compareType:string, compareValue:string) : System.Threading.Tasks.Task<ApiResponse<SystemObject>>
    + TravelTimeGetOverlay(z:int?, pinLat:double?, pinLon:double?, mapCenterLat:double?, mapCenterLon:double?, scenarioTitle:string, timeOfDayId:string, modeId:string, width:int?, height:int?, direction:string, travelTimeInterval:int?) : SystemObject
    + TravelTimeGetOverlayWithHttpInfo(z:int?, pinLat:double?, pinLon:double?, mapCenterLat:double?, mapCenterLon:double?, scenarioTitle:string, timeOfDayId:string, modeId:string, width:int?, height:int?, direction:string, travelTimeInterval:int?) : ApiResponse< SystemObject >
    + <<async>> TravelTimeGetOverlayAsync(z:int?, pinLat:double?, pinLon:double?, mapCenterLat:double?, mapCenterLon:double?, scenarioTitle:string, timeOfDayId:string, modeId:string, width:int?, height:int?, direction:string, travelTimeInterval:int?) : System.Threading.Tasks.Task<SystemObject>
    + <<async>> TravelTimeGetOverlayAsyncWithHttpInfo(z:int?, pinLat:double?, pinLon:double?, mapCenterLat:double?, mapCenterLon:double?, scenarioTitle:string, timeOfDayId:string, modeId:string, width:int?, height:int?, direction:string, travelTimeInterval:int?) : System.Threading.Tasks.Task<ApiResponse<SystemObject>>
}
IApiAccessor <|-- ITravelTimeApi
ITravelTimeApi <|-- TravelTimeApi
@enduml
