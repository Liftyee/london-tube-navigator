@startuml
interface IVehicleApi {
}
class VehicleApi <<partial>> {
    + VehicleApi(basePath:String)
    + VehicleApi(configuration:IO.Swagger.Client.Configuration)
    + GetBasePath() : String
    + SetBasePath(basePath:String) : void
    + DefaultHeader() : IDictionary<String, String>
    + AddDefaultHeader(key:string, value:string) : void
    + VehicleGet(ids:List<string>) : List<TflApiPresentationEntitiesPrediction>
    + VehicleGetWithHttpInfo(ids:List<string>) : ApiResponse< List<TflApiPresentationEntitiesPrediction> >
    + <<async>> VehicleGetAsync(ids:List<string>) : System.Threading.Tasks.Task<List<TflApiPresentationEntitiesPrediction>>
    + <<async>> VehicleGetAsyncWithHttpInfo(ids:List<string>) : System.Threading.Tasks.Task<ApiResponse<List<TflApiPresentationEntitiesPrediction>>>
}
IApiAccessor <|-- IVehicleApi
IVehicleApi <|-- VehicleApi
@enduml
