/* 
 * Transport for London Unified API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CabwiseApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CabwiseApiTests
    {
        private CabwiseApi _instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            _instance = new CabwiseApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CabwiseApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CabwiseApi
            //Assert.IsInstanceOfType(typeof(CabwiseApi), instance, "instance is a CabwiseApi");
        }

        
        /// <summary>
        /// Test CabwiseGet
        /// </summary>
        [Test]
        public void CabwiseGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //double? lat = null;
            //double? lon = null;
            //string optype = null;
            //string wc = null;
            //double? radius = null;
            //string name = null;
            //int? maxResults = null;
            //bool? legacyFormat = null;
            //bool? forceXml = null;
            //bool? twentyFourSevenOnly = null;
            //var response = instance.CabwiseGet(lat, lon, optype, wc, radius, name, maxResults, legacyFormat, forceXml, twentyFourSevenOnly);
            //Assert.IsInstanceOf<SystemObject> (response, "response is SystemObject");
        }
        
    }

}
