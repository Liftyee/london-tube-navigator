/* 
 * Transport for London Unified API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing JourneyApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class JourneyApiTests
    {
        private JourneyApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new JourneyApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of JourneyApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' JourneyApi
            //Assert.IsInstanceOfType(typeof(JourneyApi), instance, "instance is a JourneyApi");
        }

        
        /// <summary>
        /// Test JourneyJourneyResults
        /// </summary>
        [Test]
        public void JourneyJourneyResultsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string from = null;
            //string to = null;
            //string via = null;
            //bool? nationalSearch = null;
            //string date = null;
            //string time = null;
            //string timeIs = null;
            //string journeyPreference = null;
            //List<string> mode = null;
            //List<string> accessibilityPreference = null;
            //string fromName = null;
            //string toName = null;
            //string viaName = null;
            //string maxTransferMinutes = null;
            //string maxWalkingMinutes = null;
            //string walkingSpeed = null;
            //string cyclePreference = null;
            //string adjustment = null;
            //List<string> bikeProficiency = null;
            //bool? alternativeCycle = null;
            //bool? alternativeWalking = null;
            //bool? applyHtmlMarkup = null;
            //bool? useMultiModalCall = null;
            //bool? walkingOptimization = null;
            //bool? taxiOnlyTrip = null;
            //bool? routeBetweenEntrances = null;
            //bool? useRealTimeLiveArrivals = null;
            //bool? calcOneDirection = null;
            //bool? includeAlternativeRoutes = null;
            //int? overrideMultiModalScenario = null;
            //var response = instance.JourneyJourneyResults(from, to, via, nationalSearch, date, time, timeIs, journeyPreference, mode, accessibilityPreference, fromName, toName, viaName, maxTransferMinutes, maxWalkingMinutes, walkingSpeed, cyclePreference, adjustment, bikeProficiency, alternativeCycle, alternativeWalking, applyHtmlMarkup, useMultiModalCall, walkingOptimization, taxiOnlyTrip, routeBetweenEntrances, useRealTimeLiveArrivals, calcOneDirection, includeAlternativeRoutes, overrideMultiModalScenario);
            //Assert.IsInstanceOf<TflApiPresentationEntitiesJourneyPlannerItineraryResult> (response, "response is TflApiPresentationEntitiesJourneyPlannerItineraryResult");
        }
        
        /// <summary>
        /// Test JourneyMeta
        /// </summary>
        [Test]
        public void JourneyMetaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.JourneyMeta();
            //Assert.IsInstanceOf<List<TflApiPresentationEntitiesMode>> (response, "response is List<TflApiPresentationEntitiesMode>");
        }
        
    }

}
