/* 
 * Transport for London Unified API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing TflApiPresentationEntitiesJourneyPlannerFare
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class TflApiPresentationEntitiesJourneyPlannerFareTests
    {
        // TODO uncomment below to declare an instance variable for TflApiPresentationEntitiesJourneyPlannerFare
        //private TflApiPresentationEntitiesJourneyPlannerFare instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of TflApiPresentationEntitiesJourneyPlannerFare
            //instance = new TflApiPresentationEntitiesJourneyPlannerFare();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TflApiPresentationEntitiesJourneyPlannerFare
        /// </summary>
        [Test]
        public void TflApiPresentationEntitiesJourneyPlannerFareInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" TflApiPresentationEntitiesJourneyPlannerFare
            //Assert.IsInstanceOfType<TflApiPresentationEntitiesJourneyPlannerFare> (instance, "variable 'instance' is a TflApiPresentationEntitiesJourneyPlannerFare");
        }


        /// <summary>
        /// Test the property 'LowZone'
        /// </summary>
        [Test]
        public void LowZoneTest()
        {
            // TODO unit test for the property 'LowZone'
        }
        /// <summary>
        /// Test the property 'HighZone'
        /// </summary>
        [Test]
        public void HighZoneTest()
        {
            // TODO unit test for the property 'HighZone'
        }
        /// <summary>
        /// Test the property 'Cost'
        /// </summary>
        [Test]
        public void CostTest()
        {
            // TODO unit test for the property 'Cost'
        }
        /// <summary>
        /// Test the property 'ChargeProfileName'
        /// </summary>
        [Test]
        public void ChargeProfileNameTest()
        {
            // TODO unit test for the property 'ChargeProfileName'
        }
        /// <summary>
        /// Test the property 'IsHopperFare'
        /// </summary>
        [Test]
        public void IsHopperFareTest()
        {
            // TODO unit test for the property 'IsHopperFare'
        }
        /// <summary>
        /// Test the property 'ChargeLevel'
        /// </summary>
        [Test]
        public void ChargeLevelTest()
        {
            // TODO unit test for the property 'ChargeLevel'
        }
        /// <summary>
        /// Test the property 'Peak'
        /// </summary>
        [Test]
        public void PeakTest()
        {
            // TODO unit test for the property 'Peak'
        }
        /// <summary>
        /// Test the property 'OffPeak'
        /// </summary>
        [Test]
        public void OffPeakTest()
        {
            // TODO unit test for the property 'OffPeak'
        }
        /// <summary>
        /// Test the property 'Taps'
        /// </summary>
        [Test]
        public void TapsTest()
        {
            // TODO unit test for the property 'Taps'
        }

    }

}
