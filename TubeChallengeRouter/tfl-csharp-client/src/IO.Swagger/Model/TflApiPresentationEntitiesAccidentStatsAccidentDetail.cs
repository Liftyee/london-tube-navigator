/* 
 * Transport for London Unified API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// TflApiPresentationEntitiesAccidentStatsAccidentDetail
    /// </summary>
    [DataContract]
    public partial class TflApiPresentationEntitiesAccidentStatsAccidentDetail :  IEquatable<TflApiPresentationEntitiesAccidentStatsAccidentDetail>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TflApiPresentationEntitiesAccidentStatsAccidentDetail" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="lat">lat.</param>
        /// <param name="lon">lon.</param>
        /// <param name="location">location.</param>
        /// <param name="date">date.</param>
        /// <param name="severity">severity.</param>
        /// <param name="borough">borough.</param>
        /// <param name="casualties">casualties.</param>
        /// <param name="vehicles">vehicles.</param>
        public TflApiPresentationEntitiesAccidentStatsAccidentDetail(int? id = default(int?), double? lat = default(double?), double? lon = default(double?), string location = default(string), DateTime? date = default(DateTime?), string severity = default(string), string borough = default(string), List<TflApiPresentationEntitiesAccidentStatsCasualty> casualties = default(List<TflApiPresentationEntitiesAccidentStatsCasualty>), List<TflApiPresentationEntitiesAccidentStatsVehicle> vehicles = default(List<TflApiPresentationEntitiesAccidentStatsVehicle>))
        {
            this.Id = id;
            this.Lat = lat;
            this.Lon = lon;
            this.Location = location;
            this.Date = date;
            this.Severity = severity;
            this.Borough = borough;
            this.Casualties = casualties;
            this.Vehicles = vehicles;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; set; }

        /// <summary>
        /// Gets or Sets Lat
        /// </summary>
        [DataMember(Name="lat", EmitDefaultValue=false)]
        public double? Lat { get; set; }

        /// <summary>
        /// Gets or Sets Lon
        /// </summary>
        [DataMember(Name="lon", EmitDefaultValue=false)]
        public double? Lon { get; set; }

        /// <summary>
        /// Gets or Sets Location
        /// </summary>
        [DataMember(Name="location", EmitDefaultValue=false)]
        public string Location { get; set; }

        /// <summary>
        /// Gets or Sets Date
        /// </summary>
        [DataMember(Name="date", EmitDefaultValue=false)]
        public DateTime? Date { get; set; }

        /// <summary>
        /// Gets or Sets Severity
        /// </summary>
        [DataMember(Name="severity", EmitDefaultValue=false)]
        public string Severity { get; set; }

        /// <summary>
        /// Gets or Sets Borough
        /// </summary>
        [DataMember(Name="borough", EmitDefaultValue=false)]
        public string Borough { get; set; }

        /// <summary>
        /// Gets or Sets Casualties
        /// </summary>
        [DataMember(Name="casualties", EmitDefaultValue=false)]
        public List<TflApiPresentationEntitiesAccidentStatsCasualty> Casualties { get; set; }

        /// <summary>
        /// Gets or Sets Vehicles
        /// </summary>
        [DataMember(Name="vehicles", EmitDefaultValue=false)]
        public List<TflApiPresentationEntitiesAccidentStatsVehicle> Vehicles { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TflApiPresentationEntitiesAccidentStatsAccidentDetail {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Lat: ").Append(Lat).Append("\n");
            sb.Append("  Lon: ").Append(Lon).Append("\n");
            sb.Append("  Location: ").Append(Location).Append("\n");
            sb.Append("  Date: ").Append(Date).Append("\n");
            sb.Append("  Severity: ").Append(Severity).Append("\n");
            sb.Append("  Borough: ").Append(Borough).Append("\n");
            sb.Append("  Casualties: ").Append(Casualties).Append("\n");
            sb.Append("  Vehicles: ").Append(Vehicles).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TflApiPresentationEntitiesAccidentStatsAccidentDetail);
        }

        /// <summary>
        /// Returns true if TflApiPresentationEntitiesAccidentStatsAccidentDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of TflApiPresentationEntitiesAccidentStatsAccidentDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TflApiPresentationEntitiesAccidentStatsAccidentDetail input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Lat == input.Lat ||
                    (this.Lat != null &&
                    this.Lat.Equals(input.Lat))
                ) && 
                (
                    this.Lon == input.Lon ||
                    (this.Lon != null &&
                    this.Lon.Equals(input.Lon))
                ) && 
                (
                    this.Location == input.Location ||
                    (this.Location != null &&
                    this.Location.Equals(input.Location))
                ) && 
                (
                    this.Date == input.Date ||
                    (this.Date != null &&
                    this.Date.Equals(input.Date))
                ) && 
                (
                    this.Severity == input.Severity ||
                    (this.Severity != null &&
                    this.Severity.Equals(input.Severity))
                ) && 
                (
                    this.Borough == input.Borough ||
                    (this.Borough != null &&
                    this.Borough.Equals(input.Borough))
                ) && 
                (
                    this.Casualties == input.Casualties ||
                    this.Casualties != null &&
                    this.Casualties.SequenceEqual(input.Casualties)
                ) && 
                (
                    this.Vehicles == input.Vehicles ||
                    this.Vehicles != null &&
                    this.Vehicles.SequenceEqual(input.Vehicles)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Lat != null)
                    hashCode = hashCode * 59 + this.Lat.GetHashCode();
                if (this.Lon != null)
                    hashCode = hashCode * 59 + this.Lon.GetHashCode();
                if (this.Location != null)
                    hashCode = hashCode * 59 + this.Location.GetHashCode();
                if (this.Date != null)
                    hashCode = hashCode * 59 + this.Date.GetHashCode();
                if (this.Severity != null)
                    hashCode = hashCode * 59 + this.Severity.GetHashCode();
                if (this.Borough != null)
                    hashCode = hashCode * 59 + this.Borough.GetHashCode();
                if (this.Casualties != null)
                    hashCode = hashCode * 59 + this.Casualties.GetHashCode();
                if (this.Vehicles != null)
                    hashCode = hashCode * 59 + this.Vehicles.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
