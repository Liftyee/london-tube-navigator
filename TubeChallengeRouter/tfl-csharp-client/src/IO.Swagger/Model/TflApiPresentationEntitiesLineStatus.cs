/* 
 * Transport for London Unified API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System.Text;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;

namespace IO.Swagger.Model
{
    /// <summary>
    /// TflApiPresentationEntitiesLineStatus
    /// </summary>
    [DataContract]
    public partial class TflApiPresentationEntitiesLineStatus :  IEquatable<TflApiPresentationEntitiesLineStatus>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TflApiPresentationEntitiesLineStatus" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="lineId">lineId.</param>
        /// <param name="statusSeverity">statusSeverity.</param>
        /// <param name="statusSeverityDescription">statusSeverityDescription.</param>
        /// <param name="reason">reason.</param>
        /// <param name="created">created.</param>
        /// <param name="modified">modified.</param>
        /// <param name="validityPeriods">validityPeriods.</param>
        /// <param name="disruption">disruption.</param>
        public TflApiPresentationEntitiesLineStatus(int? id = default(int?), string lineId = default(string), int? statusSeverity = default(int?), string statusSeverityDescription = default(string), string reason = default(string), DateTime? created = default(DateTime?), DateTime? modified = default(DateTime?), List<TflApiPresentationEntitiesValidityPeriod> validityPeriods = default(List<TflApiPresentationEntitiesValidityPeriod>), TflApiPresentationEntitiesDisruption disruption = default(TflApiPresentationEntitiesDisruption))
        {
            this.Id = id;
            this.LineId = lineId;
            this.StatusSeverity = statusSeverity;
            this.StatusSeverityDescription = statusSeverityDescription;
            this.Reason = reason;
            this.Created = created;
            this.Modified = modified;
            this.ValidityPeriods = validityPeriods;
            this.Disruption = disruption;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; set; }

        /// <summary>
        /// Gets or Sets LineId
        /// </summary>
        [DataMember(Name="lineId", EmitDefaultValue=false)]
        public string LineId { get; set; }

        /// <summary>
        /// Gets or Sets StatusSeverity
        /// </summary>
        [DataMember(Name="statusSeverity", EmitDefaultValue=false)]
        public int? StatusSeverity { get; set; }

        /// <summary>
        /// Gets or Sets StatusSeverityDescription
        /// </summary>
        [DataMember(Name="statusSeverityDescription", EmitDefaultValue=false)]
        public string StatusSeverityDescription { get; set; }

        /// <summary>
        /// Gets or Sets Reason
        /// </summary>
        [DataMember(Name="reason", EmitDefaultValue=false)]
        public string Reason { get; set; }

        /// <summary>
        /// Gets or Sets Created
        /// </summary>
        [DataMember(Name="created", EmitDefaultValue=false)]
        public DateTime? Created { get; set; }

        /// <summary>
        /// Gets or Sets Modified
        /// </summary>
        [DataMember(Name="modified", EmitDefaultValue=false)]
        public DateTime? Modified { get; set; }

        /// <summary>
        /// Gets or Sets ValidityPeriods
        /// </summary>
        [DataMember(Name="validityPeriods", EmitDefaultValue=false)]
        public List<TflApiPresentationEntitiesValidityPeriod> ValidityPeriods { get; set; }

        /// <summary>
        /// Gets or Sets Disruption
        /// </summary>
        [DataMember(Name="disruption", EmitDefaultValue=false)]
        public TflApiPresentationEntitiesDisruption Disruption { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TflApiPresentationEntitiesLineStatus {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  LineId: ").Append(LineId).Append("\n");
            sb.Append("  StatusSeverity: ").Append(StatusSeverity).Append("\n");
            sb.Append("  StatusSeverityDescription: ").Append(StatusSeverityDescription).Append("\n");
            sb.Append("  Reason: ").Append(Reason).Append("\n");
            sb.Append("  Created: ").Append(Created).Append("\n");
            sb.Append("  Modified: ").Append(Modified).Append("\n");
            sb.Append("  ValidityPeriods: ").Append(ValidityPeriods).Append("\n");
            sb.Append("  Disruption: ").Append(Disruption).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TflApiPresentationEntitiesLineStatus);
        }

        /// <summary>
        /// Returns true if TflApiPresentationEntitiesLineStatus instances are equal
        /// </summary>
        /// <param name="input">Instance of TflApiPresentationEntitiesLineStatus to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TflApiPresentationEntitiesLineStatus input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.LineId == input.LineId ||
                    (this.LineId != null &&
                    this.LineId.Equals(input.LineId))
                ) && 
                (
                    this.StatusSeverity == input.StatusSeverity ||
                    (this.StatusSeverity != null &&
                    this.StatusSeverity.Equals(input.StatusSeverity))
                ) && 
                (
                    this.StatusSeverityDescription == input.StatusSeverityDescription ||
                    (this.StatusSeverityDescription != null &&
                    this.StatusSeverityDescription.Equals(input.StatusSeverityDescription))
                ) && 
                (
                    this.Reason == input.Reason ||
                    (this.Reason != null &&
                    this.Reason.Equals(input.Reason))
                ) && 
                (
                    this.Created == input.Created ||
                    (this.Created != null &&
                    this.Created.Equals(input.Created))
                ) && 
                (
                    this.Modified == input.Modified ||
                    (this.Modified != null &&
                    this.Modified.Equals(input.Modified))
                ) && 
                (
                    this.ValidityPeriods == input.ValidityPeriods ||
                    this.ValidityPeriods != null &&
                    this.ValidityPeriods.SequenceEqual(input.ValidityPeriods)
                ) && 
                (
                    this.Disruption == input.Disruption ||
                    (this.Disruption != null &&
                    this.Disruption.Equals(input.Disruption))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.LineId != null)
                    hashCode = hashCode * 59 + this.LineId.GetHashCode();
                if (this.StatusSeverity != null)
                    hashCode = hashCode * 59 + this.StatusSeverity.GetHashCode();
                if (this.StatusSeverityDescription != null)
                    hashCode = hashCode * 59 + this.StatusSeverityDescription.GetHashCode();
                if (this.Reason != null)
                    hashCode = hashCode * 59 + this.Reason.GetHashCode();
                if (this.Created != null)
                    hashCode = hashCode * 59 + this.Created.GetHashCode();
                if (this.Modified != null)
                    hashCode = hashCode * 59 + this.Modified.GetHashCode();
                if (this.ValidityPeriods != null)
                    hashCode = hashCode * 59 + this.ValidityPeriods.GetHashCode();
                if (this.Disruption != null)
                    hashCode = hashCode * 59 + this.Disruption.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
